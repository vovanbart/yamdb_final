version: "3.9"

networks:
  traefik-public:
    external: true

volumes:
  static_value:
  media_value:
  data_value:

services:
  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    volumes:
      - data_value:/var/lib/postgresql/data/
    env_file:
      - .env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yamdb_backend
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate --noinput &&
             gunicorn api_yamdb.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.http.routers.yamdb-back.rule=Host(`bardev.ru`) && PathPrefix(`/yamdb/api`)
      - traefik.http.routers.yamdb-back.entrypoints=websecure
      - traefik.http.routers.yamdb-back.tls.certresolver=le
      - traefik.http.services.yamdb-back.loadbalancer.server.port=8000
      - traefik.http.routers.yamdb-back.priority=100

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: yamdb_frontend
    restart: unless-stopped
    depends_on:
      - backend
    volumes:
      - static_value:/usr/share/nginx/html/static/
      - media_value:/usr/share/nginx/html/media/
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.http.routers.yamdb-front.rule=Host(`bardev.ru`) && PathPrefix(`/yamdb`)
      - traefik.http.routers.yamdb-front.entrypoints=websecure
      - traefik.http.routers.yamdb-front.tls.certresolver=le
      - traefik.http.services.yamdb-front.loadbalancer.server.port=80
      - traefik.http.routers.yamdb-front.priority=200
